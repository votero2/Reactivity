{
	"Query Handler": {
		"prefix": "qhandler",
		"body": [
		  "        public class Query : IRequest<${1:ReturnObject}> {",
		  "",
		  "        }",
		  "",
		  "        public class Handler : IRequestHandler<Query,${1:ReturnObject}> {",
		  "            ",
		  "",
		  "            //inialize the dataContext access ",
		  "            private readonly DataContext _context;",
		  "            //Handler controller",
		  "            public Handler (DataContext context) {",
		  "",
		  "                _context = context;",
		  "            }",
		  "",
		  "            //Implementation of Request Handler ",
		  "            public async Task${1:ReturnObject}> Handle (Query request, CancellationToken cancellationToken) {",
		  "              ",
		  "                //handler logics goes here",
		  "",
		  "                return activities; // return type ",
		  "            }",
		  "}"
		],
		"description": "Query Handler"
	  },
	  "Command Handler": {
		"prefix": "chandler",
		"body": [
		  "     public class Command : IRequest {",
		  "         ",
		  "        }",
		  "",
		  "        public class Handler : IRequestHandler<Command> {",
		  "            private readonly DataContext _context;",
		  "",
		  "            public Handler (DataContext context) {",
		  "                _context = context;",
		  "",
		  "            }",
		  "",
		  "            public async Task<Unit> Handle (Command request, CancellationToken cancellationToken) {",
		  "               //handler logic goes here",
		  "                var success = await _context.SaveChangesAsync() > 0;",
		  "              ",
		  "                if(success) return Unit.Value;",
		  "",
		  "                throw new Exception(\"Problem saving changes\");",
		  "            }",
		  "        }"
		],
		"description": "Command Handler"
	  }
}